{"ast":null,"code":"import _classCallCheck from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/graphicdesign/Sites/apps/keto-calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // import GameStart from './components/GameStart';\n\nimport API from './utils/API';\nimport axios from \"axios\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: [],\n      query: \"\",\n      nutrition: {},\n      keto: {\n        protein: {\n          grams: 0,\n          calories: 0\n        },\n        carbs: {\n          grams: 0,\n          calories: 0\n        },\n        fat: {\n          grams: 0,\n          calories: 0\n        }\n      },\n      ratio: {\n        total: 0\n      }\n    };\n\n    _this.submitCheck = function (event) {\n      if (event.key === \"Enter\") {\n        _this.handleFormSubmit(event);\n      }\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        query: event.target.value\n      }, function (res) {\n        console.log(_this.state.query);\n        getResults(_this.state.query).then(function (res) {\n          console.log(res);\n        });\n      });\n\n      if (event.keyCode === \"a\") {// this.handleFormSubmit(event)\n      }\n    };\n\n    _this.handleFormSubmit = function (event) {\n      var query;\n\n      if (_this.state.query) {\n        query = _this.state.query;\n      } else {\n        query = \"eggs\";\n      }\n\n      API.getNutrition(query).then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          nutrition: res.data,\n          keto: {\n            fat: {\n              grams: res.data.nf_total_fat,\n              calories: res.data.nf_total_fat * 9\n            },\n            carbs: {\n              grams: res.data.nf_total_carbohydrate,\n              calories: res.data.nf_total_carbohydrate * 4\n            },\n            protein: {\n              grams: res.data.nf_protein,\n              calories: res.data.nf_protein * 4\n            },\n            ratio: {\n              total: _this.state.keto.fat.calories + _this.state.keto.protein.calories + _this.state.keto.carbs.calories\n            }\n          }\n        });\n      }).then(function (res) {\n        _this.setState({\n          ratio: {\n            total: _this.state.keto.fat.calories + _this.state.keto.protein.calories + _this.state.keto.carbs.calories\n          }\n        });\n\n        console.log(_this.state.keto.ratio.total);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getNutrition(\"eggs\").then(function (res) {\n        console.log(res.data);\n\n        _this2.setState({\n          nutrition: res.data,\n          keto: {\n            fat: {\n              grams: res.data.nf_total_fat,\n              calories: res.data.nf_total_fat * 9\n            },\n            carbs: {\n              grams: res.data.nf_total_carbohydrate,\n              calories: res.data.nf_total_carbohydrate * 4\n            },\n            protein: {\n              grams: res.data.nf_protein,\n              calories: res.data.nf_protein * 4\n            },\n            ratio: {\n              total: _this2.state.keto.fat.calories + _this2.state.keto.protein.calories + _this2.state.keto.carbs.calories\n            }\n          }\n        });\n      }).then(function (res) {\n        _this2.setState({\n          ratio: {\n            total: _this2.state.keto.fat.calories + _this2.state.keto.protein.calories + _this2.state.keto.carbs.calories\n          }\n        });\n\n        console.log(_this2.state.keto.ratio.total);\n      }); // this.setState({nutrition : API.getNutrition(\"eggs\")}).then( res => {\n      //   console.log(this.state.nutrition);\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-query\",\n        placeholder: \"SEARCH GIFS\",\n        onKeyPress: this.submitCheck,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"formSubmit\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Search\")), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"fat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Fat: \", this.state.keto.fat.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, this.state.keto.fat.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Carbs: \", this.state.keto.carbs.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.state.keto.carbs.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Protein: \", this.state.keto.fat.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, this.state.nutrition.nf_total_fat * 9, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, this.state.ratio.total, \" \")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/*\n  2 options:\n    - form that allows you to enter nutrition info\n    - search field that permits you to search a nutrition facts API\n      -APIs:\n        - \n\n\n*/","map":{"version":3,"sources":["/Users/graphicdesign/Sites/apps/keto-calculator/src/App.js"],"names":["React","Component","API","axios","App","state","cards","query","nutrition","keto","protein","grams","calories","carbs","fat","ratio","total","submitCheck","event","key","handleFormSubmit","handleInputChange","setState","target","value","res","console","log","getResults","then","keyCode","getNutrition","data","nf_total_fat","nf_total_carbohydrate","nf_protein"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// import GameStart from './components/GameStart';\nimport API from './utils/API';\nimport axios from \"axios\";\n\n\n\nclass App extends Component {\n  state = {\n    cards: [],\n    query: \"\",\n    nutrition: {},\n    keto : {\n      protein: {\n        grams: 0,\n        calories: 0\n      },\n      carbs: {\n        grams: 0,\n        calories: 0\n      },\n      fat: {\n        grams: 0,\n        calories: 0\n      },\n    },\n    ratio: {\n      total: 0\n    }\n  };\n  submitCheck = event => {\n    if(event.key === \"Enter\"){\n        this.handleFormSubmit(event);\n    }\n  }\n  handleInputChange = event => {\n    this.setState({query : event.target.value}, res => {\n    console.log(this.state.query);\n      getResults(this.state.query).then(res => {\n        console.log(res);\n      });\n    });\n    if(event.keyCode === \"a\"){\n        // this.handleFormSubmit(event)\n    }\n}\nhandleFormSubmit = event => {\n  let query;\n  if(this.state.query){\n    query = this.state.query;\n  } else {\n    query = \"eggs\"\n  }\n  API.getNutrition(query).then( res => {\n    console.log(res.data);\n    this.setState({\n      nutrition: res.data,\n      keto: {\n        fat: {\n          grams: res.data.nf_total_fat,\n          calories: res.data.nf_total_fat*9\n        },\n        carbs: {\n          grams: res.data.nf_total_carbohydrate,\n          calories: res.data.nf_total_carbohydrate*4\n        },\n        protein: {\n          grams: res.data.nf_protein,\n          calories: res.data.nf_protein*4\n        },\n        ratio: {\n          total : this.state.keto.fat.calories + this.state.keto.protein.calories + this.state.keto.carbs.calories\n        }\n      }\n    });\n\n  }).then( res => {\n    this.setState({\n      ratio : {\n        total : this.state.keto.fat.calories + this.state.keto.protein.calories + this.state.keto.carbs.calories\n      }\n    });\n    console.log(this.state.keto.ratio.total);\n  });\n}\n\ncomponentDidMount(){\n  API.getNutrition(\"eggs\").then( res => {\n    console.log(res.data);\n    this.setState({\n      nutrition: res.data,\n      keto: {\n        fat: {\n          grams: res.data.nf_total_fat,\n          calories: res.data.nf_total_fat*9\n        },\n        carbs: {\n          grams: res.data.nf_total_carbohydrate,\n          calories: res.data.nf_total_carbohydrate*4\n        },\n        protein: {\n          grams: res.data.nf_protein,\n          calories: res.data.nf_protein*4\n        },\n        ratio: {\n          total : this.state.keto.fat.calories + this.state.keto.protein.calories + this.state.keto.carbs.calories\n        }\n      }\n    });\n\n  }).then( res => {\n    this.setState({\n      ratio : {\n        total : this.state.keto.fat.calories + this.state.keto.protein.calories + this.state.keto.carbs.calories\n      }\n    });\n    console.log(this.state.keto.ratio.total);\n  });\n\n  // this.setState({nutrition : API.getNutrition(\"eggs\")}).then( res => {\n  //   console.log(this.state.nutrition);\n  // });\n}\n\n\n  render() {\n    return (\n      <div className=\"content-wrap\">\n        {/* <GameStart/> */}\n        <div className=\"header-center\">\n                        <input className=\"search-query\" placeholder=\"SEARCH GIFS\" onKeyPress={this.submitCheck} onChange={this.handleInputChange}/>\n                        <button className=\"formSubmit\" onClick={this.handleFormSubmit}>Search</button>\n        </div>\n        <table>\n          <tbody>\n            <tr className=\"fat\">\n              <td className=\"grams\">Fat: {this.state.keto.fat.grams} grams</td>\n              <td>{this.state.keto.fat.calories} calories</td>\n              </tr>\n              <tr>\n              <td className=\"grams\">Carbs: {this.state.keto.carbs.grams} grams</td>\n              <td>{this.state.keto.carbs.calories} calories</td>\n              </tr>\n              <tr>\n              <td className=\"grams\">Protein: {this.state.keto.fat.grams} grams</td>\n              <td>{this.state.nutrition.nf_total_fat*9} calories</td>\n            </tr>\n            <tr>\n              <td>{this.state.ratio.total} </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n  2 options:\n    - form that allows you to enter nutrition info\n    - search field that permits you to search a nutrition facts API\n      -APIs:\n        - \n\n\n*/"]},"metadata":{},"sourceType":"module"}