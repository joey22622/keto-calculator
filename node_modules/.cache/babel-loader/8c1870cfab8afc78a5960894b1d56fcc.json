{"ast":null,"code":"import _classCallCheck from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/graphicdesign/Sites/apps/keto-calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss'; // import GameStart from './components/GameStart';\n\nimport API from './utils/API';\nimport axios from \"axios\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: [],\n      query: \"\",\n      nutrition: {},\n      name: \"\",\n      keto: {\n        protein: {\n          grams: 0,\n          calories: 0\n        },\n        carbs: {\n          grams: 0,\n          calories: 0\n        },\n        fiber: {\n          grams: 0,\n          calories: 0\n        },\n        netCarbs: {\n          grams: 0,\n          calories: 0\n        },\n        fat: {\n          grams: 0,\n          calories: 0\n        }\n      },\n      total: {\n        grams: 0,\n        calories: 0\n      },\n      ratios: {\n        protein: 0,\n        carbs: 0,\n        fat: 0\n      }\n    };\n\n    _this.submitCheck = function (event) {\n      if (event.key === \"Enter\") {\n        _this.handleFormSubmit(event);\n      }\n    };\n\n    _this.mathPercent = function (num) {\n      return parseFloat(num * 100) + \"%\";\n    };\n\n    _this.mathRound = function (value) {\n      return Math.round(value * 100) / 100;\n    };\n\n    _this.handleCalc = function () {\n      var nutrition = _this.state.keto;\n      var protein = nutrition.protein.calories;\n      var fat = nutrition.fat.calories;\n      var carbs = nutrition.netCarbs.calories;\n      var total = fat + carbs + protein;\n      var ratios = {\n        fat: _this.mathRound(fat / total),\n        carbs: _this.mathRound(carbs / total),\n        protein: _this.mathRound(protein / total)\n      };\n\n      _this.setState({\n        ratios: ratios,\n        total: {\n          grams: _this.mathRound(total),\n          calories: _this.mathRound(protein / 4 + fat / 9 + carbs / 4)\n        }\n      });\n\n      console.log(ratios);\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        query: event.target.value\n      }, function (res) {\n        console.log(_this.state.query);\n        API.getResults(_this.state.query).then(function (res) {\n          if (res.data.hits.length > 0) {\n            console.log(res.data.hits[0].fields.item_name);\n          } else {\n            console.log(\"nope\");\n          }\n        });\n      });\n\n      if (event.keyCode === \"a\") {// this.handleFormSubmit(event)\n      }\n    };\n\n    _this.loadNutrition = function (query) {\n      API.getNutrition(query).then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          name: res.data.item_name,\n          nutrition: res.data,\n          keto: {\n            fat: {\n              grams: res.data.nf_total_fat,\n              calories: res.data.nf_total_fat * 9\n            },\n            carbs: {\n              grams: res.data.nf_total_carbohydrate,\n              calories: res.data.nf_total_carbohydrate * 4\n            },\n            fiber: {\n              grams: res.data.nf_dietary_fiber,\n              calories: res.data.nf_dietary_fiber * 4\n            },\n            netCarbs: {\n              grams: res.data.nf_total_carbohydrate - res.data.nf_dietary_fiber,\n              calories: res.data.nf_total_carbohydrate * 4 - res.data.nf_dietary_fiber * 4\n            },\n            protein: {\n              grams: res.data.nf_protein,\n              calories: res.data.nf_protein * 4\n            }\n          }\n        });\n      }).then(function (res) {\n        _this.handleCalc();\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      var query;\n\n      if (_this.state.query) {\n        query = _this.state.query;\n      } else {\n        query = \"eggs\";\n      }\n\n      _this.loadNutrition(query);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"search-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-query\",\n        placeholder: \"search food\",\n        onKeyPress: this.submitCheck,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"formSubmit\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Search\"))), React.createElement(\"section\", {\n        className: \"calc-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.name), this.state.query ? React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Nutrient\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Grams\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Calories\")), React.createElement(\"tr\", {\n        className: \"fat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Fat: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.state.keto.fat.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.keto.fat.calories, \" calories\")), React.createElement(\"tr\", {\n        className: \"sub-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Total Carbs: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, this.state.keto.carbs.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.keto.carbs.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"sub-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Fiber: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, this.state.keto.fiber.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.keto.fiber.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Net Carbs: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.state.keto.netCarbs.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, this.state.keto.netCarbs.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Protein: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, this.state.keto.protein.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, this.state.keto.protein.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"TOTAL: \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, this.state.total.grams, \"  grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, this.state.total.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })))) : React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"keto-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Protein: \", this.mathPercent(this.state.ratios.protein)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Carbs: \", this.mathPercent(this.state.ratios.carbs)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Fat: \", this.mathPercent(this.state.ratios.fat)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/*\n  2 options:\n    - form that allows you to enter nutrition info\n    - search field that permits you to search a nutrition facts API\n      -APIs:\n        - \n\n\n*/","map":{"version":3,"sources":["/Users/graphicdesign/Sites/apps/keto-calculator/src/App.js"],"names":["React","Component","API","axios","App","state","cards","query","nutrition","name","keto","protein","grams","calories","carbs","fiber","netCarbs","fat","total","ratios","submitCheck","event","key","handleFormSubmit","mathPercent","num","parseFloat","mathRound","value","Math","round","handleCalc","setState","console","log","handleInputChange","target","res","getResults","then","data","hits","length","fields","item_name","keyCode","loadNutrition","getNutrition","nf_total_fat","nf_total_carbohydrate","nf_dietary_fiber","nf_protein"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n// import GameStart from './components/GameStart';\nimport API from './utils/API';\nimport axios from \"axios\";\n\n\n\nclass App extends Component {\n  state = {\n    cards: [],\n    query: \"\",\n    nutrition: {},\n    name: \"\",\n    keto : {\n      protein: {\n        grams: 0,\n        calories: 0\n      },\n      carbs: {\n        grams: 0,\n        calories: 0\n      },\n      fiber: {\n        grams: 0,\n        calories: 0\n      },\n      netCarbs : {\n        grams: 0,\n        calories: 0\n      },\n      fat: {\n        grams: 0,\n        calories: 0\n      },\n    },\n    total: {\n      grams: 0,\n      calories: 0\n    },\n    ratios: {\n      protein: 0,\n      carbs: 0,\n      fat: 0\n    }\n  };\n  submitCheck = event => {\n    if(event.key === \"Enter\"){\n        this.handleFormSubmit(event);\n    }\n  }\n  mathPercent = num => {\n    return parseFloat(num*100) + `%`;\n  }\n  mathRound = value => {\n    return Math.round((value) * 100) / 100\n  } \n  handleCalc = () => {\n    const nutrition = this.state.keto;\n    const protein = nutrition.protein.calories;\n    const fat = nutrition.fat.calories;\n    const carbs = nutrition.netCarbs.calories;\n    const total = fat + carbs + protein;\n    const ratios = {\n      fat: this.mathRound(fat/total),\n      carbs: this.mathRound(carbs/total),\n      protein: this.mathRound(protein/total)\n    }\n    this.setState({\n      ratios: ratios, \n      total: {\n        grams: this.mathRound(total),\n        calories: this.mathRound(protein/4 + fat/9 + carbs/4)\n    }});\n    console.log(ratios);\n\n\n  }\n  handleInputChange = event => {\n    this.setState({query : event.target.value}, res => {\n    console.log(this.state.query);\n      API.getResults(this.state.query).then(res => {\n        if(res.data.hits.length > 0){\n          console.log(res.data.hits[0].fields.item_name);\n        } else {\n          console.log(\"nope\");\n        }\n      });\n    });\n    if(event.keyCode === \"a\"){\n        // this.handleFormSubmit(event)\n    }\n}\nloadNutrition = (query) => {\n  API.getNutrition(query).then( res => {\n    console.log(res.data);\n    this.setState({\n      name: res.data.item_name,\n      nutrition: res.data,\n      keto: {\n        fat: {\n          grams: res.data.nf_total_fat,\n          calories: res.data.nf_total_fat*9\n        },\n        carbs: {\n          grams: res.data.nf_total_carbohydrate,\n          calories: res.data.nf_total_carbohydrate*4\n        },\n        fiber: {\n          grams: res.data.nf_dietary_fiber,\n          calories: res.data.nf_dietary_fiber*4\n        },\n        netCarbs : {\n          grams: res.data.nf_total_carbohydrate - res.data.nf_dietary_fiber,\n          calories: res.data.nf_total_carbohydrate*4 - res.data.nf_dietary_fiber*4\n        },\n        protein: {\n          grams: res.data.nf_protein,\n          calories: res.data.nf_protein*4\n        }\n      }\n    });\n\n  }).then( res => {\n    this.handleCalc();\n  });\n}\nhandleFormSubmit = event => {\n  let query;\n  if(this.state.query){\n    query = this.state.query;\n  } else {\n    query = \"eggs\"\n  }\n  this.loadNutrition(query);\n  \n}\n\ncomponentDidMount(){\n\n}\n\n\n  render() {\n    return (\n      <div className=\"content-wrap\">\n      <section className=\"search-section\">\n      <div className=\"header-center\">\n                        <input className=\"search-query\" placeholder=\"search food\" onKeyPress={this.submitCheck} onChange={this.handleInputChange}/>\n                        <button className=\"formSubmit\" onClick={this.handleFormSubmit}>Search</button>\n        </div>\n      </section>\n      <section className=\"calc-section\">\n      <h1>{this.state.name}</h1>\n        {this.state.query ? (\n        <table>\n          <tbody>\n            <tr>\n              <th>Nutrient</th>\n              <th>Grams</th>\n              <th>Calories</th>\n            </tr>\n          <tr className=\"fat\">\n            <td>Fat: </td>\n            <td className=\"grams\">{this.state.keto.fat.grams} grams</td>\n            <td>{this.state.keto.fat.calories} calories</td>\n            </tr>\n            <tr className=\"sub-row\">\n              <td>Total Carbs: </td>\n              <td className=\"grams\">{this.state.keto.carbs.grams} grams</td>\n              <td>{this.state.keto.carbs.calories} calories</td>\n            </tr>\n            <tr>\n              <td className=\"sub-row\">Fiber: </td>\n\n              <td className=\"grams\">{this.state.keto.fiber.grams} grams</td>\n              <td>{this.state.keto.fiber.calories} calories</td>\n            </tr>\n            <tr>\n            <td>Net Carbs: </td>\n\n              <td className=\"grams\">{this.state.keto.netCarbs.grams} grams</td>\n              <td>{this.state.keto.netCarbs.calories} calories</td>\n            </tr>\n            <tr>\n            <td>Protein: </td>\n\n              <td className=\"grams\">{this.state.keto.protein.grams} grams</td>\n              <td>{this.state.keto.protein.calories} calories</td>\n            </tr>\n            <tr>\n              <td>TOTAL: </td>\n              <td>{this.state.total.grams}  grams</td>\n              <td>{this.state.total.calories} calories</td>\n            </tr>\n            <tr>\n              <td>\n\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        ) : (\n          <h1></h1>\n        )}\n        <div className=\"keto-results\">\n          <div>Protein: {this.mathPercent(this.state.ratios.protein)}</div>\n          <div>Carbs: {this.mathPercent(this.state.ratios.carbs)}</div>\n          <div>Fat: {this.mathPercent(this.state.ratios.fat)}</div>\n        </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n  2 options:\n    - form that allows you to enter nutrition info\n    - search field that permits you to search a nutrition facts API\n      -APIs:\n        - \n\n\n*/"]},"metadata":{},"sourceType":"module"}