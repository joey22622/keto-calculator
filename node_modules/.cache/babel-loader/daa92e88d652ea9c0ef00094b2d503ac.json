{"ast":null,"code":"import _classCallCheck from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/graphicdesign/Sites/apps/keto-calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css'; // import GameStart from './components/GameStart';\n\nimport API from './utils/API';\nimport axios from \"axios\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: [],\n      query: \"\",\n      nutrition: {},\n      name: \"\",\n      keto: {\n        protein: {\n          grams: 0,\n          calories: 0\n        },\n        carbs: {\n          grams: 0,\n          calories: 0\n        },\n        fat: {\n          grams: 0,\n          calories: 0\n        }\n      },\n      results: {\n        total: 0\n      }\n    };\n\n    _this.submitCheck = function (event) {\n      if (event.key === \"Enter\") {\n        _this.handleFormSubmit(event);\n      }\n    };\n\n    _this.handleCalc = function () {\n      var nutrition = _this.state.keto;\n      var protein = nutrition.protein.calories;\n      var fat = nutrition.fat.calories;\n      var carbs = nutrition.carbs.calories;\n      var total = fat + carbs + protein;\n      var ratios = {\n        fat: fat / total,\n        carbs: carbs / total,\n        protein: protein / total\n      };\n      console.log(ratios);\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        query: event.target.value\n      }, function (res) {\n        console.log(_this.state.query);\n        API.getResults(_this.state.query).then(function (res) {\n          if (res.data.hits.length > 0) {\n            console.log(res.data.hits[0].fields.item_name);\n          } else {\n            console.log(\"nope\");\n          }\n        });\n      });\n\n      if (event.keyCode === \"a\") {// this.handleFormSubmit(event)\n      }\n    };\n\n    _this.handleFormSubmit = function (event) {\n      var query;\n\n      if (_this.state.query) {\n        query = _this.state.query;\n      } else {\n        query = \"eggs\";\n      }\n\n      API.getNutrition(query).then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          name: res.data.item_name,\n          nutrition: res.data,\n          keto: {\n            fat: {\n              grams: res.data.nf_total_fat,\n              calories: res.data.nf_total_fat * 9\n            },\n            carbs: {\n              grams: res.data.nf_total_carbohydrate,\n              calories: res.data.nf_total_carbohydrate * 4\n            },\n            protein: {\n              grams: res.data.nf_protein,\n              calories: res.data.nf_protein * 4\n            },\n            results: {\n              total: _this.state.keto.fat.calories + _this.state.keto.protein.calories + _this.state.keto.carbs.calories\n            }\n          }\n        });\n      }).then(function (res) {\n        _this.handleCalc();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getNutrition(\"eggs\").then(function (res) {\n        console.log(res.data);\n        var data = {\n          fat: {\n            grams: res.data.nf_total_fat,\n            calories: res.data.nf_total_fat * 9\n          },\n          carbs: {\n            grams: res.data.nf_total_carbohydrate,\n            calories: res.data.nf_total_carbohydrate * 4\n          },\n          protein: {\n            grams: res.data.nf_protein,\n            calories: res.data.nf_protein * 4\n          }\n        };\n\n        _this2.setState({\n          nutrition: res.data,\n          keto: {\n            fat: {\n              grams: res.data.nf_total_fat,\n              calories: res.data.nf_total_fat * 9\n            },\n            carbs: {\n              grams: res.data.nf_total_carbohydrate,\n              calories: res.data.nf_total_carbohydrate * 4\n            },\n            protein: {\n              grams: res.data.nf_protein,\n              calories: res.data.nf_protein * 4\n            },\n            results: {}\n          }\n        });\n      }).then(function (res) {\n        _this2.setState({\n          results: {\n            total: _this2.state.keto.fat.calories + _this2.state.keto.protein.calories + _this2.state.keto.carbs.calories\n          }\n        });\n\n        console.log(_this2.state.keto.results.total);\n      }); // this.setState({nutrition : API.getNutrition(\"eggs\")}).then( res => {\n      //   console.log(this.state.nutrition);\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-query\",\n        placeholder: \"search food\",\n        onKeyPress: this.submitCheck,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"formSubmit\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Search\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.state.name)), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"fat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Fat: \", this.state.keto.fat.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, this.state.keto.fat.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Carbs: \", this.state.keto.carbs.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, this.state.keto.carbs.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Protein: \", this.state.keto.protein.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, this.state.keto.protein.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.state.results.total, \" \")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/*\n  2 options:\n    - form that allows you to enter nutrition info\n    - search field that permits you to search a nutrition facts API\n      -APIs:\n        - \n\n\n*/","map":{"version":3,"sources":["/Users/graphicdesign/Sites/apps/keto-calculator/src/App.js"],"names":["React","Component","API","axios","App","state","cards","query","nutrition","name","keto","protein","grams","calories","carbs","fat","results","total","submitCheck","event","key","handleFormSubmit","handleCalc","ratios","console","log","handleInputChange","setState","target","value","res","getResults","then","data","hits","length","fields","item_name","keyCode","getNutrition","nf_total_fat","nf_total_carbohydrate","nf_protein"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n// import GameStart from './components/GameStart';\nimport API from './utils/API';\nimport axios from \"axios\";\n\n\n\nclass App extends Component {\n  state = {\n    cards: [],\n    query: \"\",\n    nutrition: {},\n    name: \"\",\n    keto : {\n      protein: {\n        grams: 0,\n        calories: 0\n      },\n      carbs: {\n        grams: 0,\n        calories: 0\n      },\n      fat: {\n        grams: 0,\n        calories: 0\n      },\n    },\n    results: {\n      total: 0\n    }\n  };\n  submitCheck = event => {\n    if(event.key === \"Enter\"){\n        this.handleFormSubmit(event);\n    }\n  }\n  handleCalc = () => {\n    const nutrition = this.state.keto;\n    const protein = nutrition.protein.calories;\n    const fat = nutrition.fat.calories;\n    const carbs = nutrition.carbs.calories;\n    const total = fat + carbs + protein;\n    const ratios = {\n      fat: fat/total,\n      carbs: carbs/total,\n      protein: protein/total\n    }\n    console.log(ratios);\n\n\n  }\n  handleInputChange = event => {\n    this.setState({query : event.target.value}, res => {\n    console.log(this.state.query);\n      API.getResults(this.state.query).then(res => {\n        if(res.data.hits.length > 0){\n          console.log(res.data.hits[0].fields.item_name);\n        } else {\n          console.log(\"nope\");\n        }\n      });\n    });\n    if(event.keyCode === \"a\"){\n        // this.handleFormSubmit(event)\n    }\n}\nhandleFormSubmit = event => {\n  let query;\n  if(this.state.query){\n    query = this.state.query;\n  } else {\n    query = \"eggs\"\n  }\n  API.getNutrition(query).then( res => {\n    console.log(res.data);\n    this.setState({\n      name: res.data.item_name,\n      nutrition: res.data,\n      keto: {\n        fat: {\n          grams: res.data.nf_total_fat,\n          calories: res.data.nf_total_fat*9\n        },\n        carbs: {\n          grams: res.data.nf_total_carbohydrate,\n          calories: res.data.nf_total_carbohydrate*4\n        },\n        protein: {\n          grams: res.data.nf_protein,\n          calories: res.data.nf_protein*4\n        },\n        results: {\n          total : this.state.keto.fat.calories + this.state.keto.protein.calories + this.state.keto.carbs.calories\n        }\n      }\n    });\n\n  }).then( res => {\n    this.handleCalc();\n  });\n}\n\ncomponentDidMount(){\n  API.getNutrition(\"eggs\").then( res => {\n    console.log(res.data);\n    const data = {\n      fat: {\n        grams: res.data.nf_total_fat,\n        calories: res.data.nf_total_fat*9\n      },\n      carbs: {\n        grams: res.data.nf_total_carbohydrate,\n        calories: res.data.nf_total_carbohydrate*4\n      },\n      protein: {\n        grams: res.data.nf_protein,\n        calories: res.data.nf_protein*4\n      }\n    }\n    this.setState({\n      nutrition: res.data,\n      keto: {\n        fat: {\n          grams: res.data.nf_total_fat,\n          calories: res.data.nf_total_fat*9\n        },\n        carbs: {\n          grams: res.data.nf_total_carbohydrate,\n          calories: res.data.nf_total_carbohydrate*4\n        },\n        protein: {\n          grams: res.data.nf_protein,\n          calories: res.data.nf_protein*4\n        },\n        results: {\n          \n        }\n      }\n    });\n\n  }).then( res => {\n    this.setState({\n      results : {\n        total : this.state.keto.fat.calories + this.state.keto.protein.calories + this.state.keto.carbs.calories\n      }\n    });\n    console.log(this.state.keto.results.total);\n  });\n\n  // this.setState({nutrition : API.getNutrition(\"eggs\")}).then( res => {\n  //   console.log(this.state.nutrition);\n  // });\n}\n\n\n  render() {\n    return (\n      <div className=\"content-wrap\">\n        {/* <GameStart/> */}\n\n        <div className=\"header-center\">\n                        <input className=\"search-query\" placeholder=\"search food\" onKeyPress={this.submitCheck} onChange={this.handleInputChange}/>\n                        <button className=\"formSubmit\" onClick={this.handleFormSubmit}>Search</button>\n                        <h1>{this.state.name}</h1>\n        </div>\n        <table>\n          <tbody>\n            <tr className=\"fat\">\n              <td className=\"grams\">Fat: {this.state.keto.fat.grams} grams</td>\n              <td>{this.state.keto.fat.calories} calories</td>\n              </tr>\n              <tr>\n              <td className=\"grams\">Carbs: {this.state.keto.carbs.grams} grams</td>\n              <td>{this.state.keto.carbs.calories} calories</td>\n              </tr>\n              <tr>\n              <td className=\"grams\">Protein: {this.state.keto.protein.grams} grams</td>\n              <td>{this.state.keto.protein.calories} calories</td>\n            </tr>\n            <tr>\n              <td>{this.state.results.total} </td>\n            </tr>\n            <tr>\n              <td>\n\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n  2 options:\n    - form that allows you to enter nutrition info\n    - search field that permits you to search a nutrition facts API\n      -APIs:\n        - \n\n\n*/"]},"metadata":{},"sourceType":"module"}