{"ast":null,"code":"import _classCallCheck from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/graphicdesign/Sites/apps/keto-calculator/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/graphicdesign/Sites/apps/keto-calculator/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss'; // import GameStart from './components/GameStart';\n\nimport API from './utils/API';\nimport Match from './Match';\nimport axios from \"axios\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      searched: false,\n      cards: [],\n      query: \"\",\n      matches: [],\n      nutrition: {},\n      name: \"\",\n      calculators: {\n        calories: function calories(ratio, grams) {\n          return ratio * grams;\n        }\n      },\n      keto: {\n        protein: {\n          grams: 0,\n          calories: 0\n        },\n        carbs: {\n          grams: 0,\n          calories: 0\n        },\n        fiber: {\n          grams: 0,\n          calories: 0\n        },\n        netCarbs: {\n          grams: 0,\n          calories: 0\n        },\n        fat: {\n          grams: 0,\n          calories: 0\n        }\n      },\n      total: {\n        grams: function grams() {},\n        calories: 0\n      },\n      ratios: {\n        protein: 0,\n        carbs: 0,\n        fat: 0\n      }\n    };\n\n    _this.submitCheck = function (event) {\n      if (event.key === \"Enter\") {\n        _this.handleFormSubmit(event);\n      }\n    };\n\n    _this.mathPercent = function (num) {\n      return parseFloat(num * 100) + \"%\";\n    };\n\n    _this.mathRound = function (value) {\n      return Math.round(value * 100) / 100;\n    };\n\n    _this.handleCalc = function () {\n      var nutrition = _this.state.keto;\n      var protein = nutrition.protein.calories;\n      var fat = nutrition.fat.calories;\n      var carbs = nutrition.netCarbs.calories;\n      var total = fat + carbs + protein;\n      var ratios = {\n        fat: _this.mathRound(fat / total),\n        carbs: _this.mathRound(carbs / total),\n        protein: _this.mathRound(protein / total)\n      };\n\n      _this.setState({\n        ratios: ratios,\n        total: {\n          grams: _this.mathRound(total),\n          calories: _this.mathRound(protein / 4 + fat / 9 + carbs / 4)\n        }\n      });\n\n      console.log(ratios);\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        query: event.target.value\n      }, function (res) {\n        console.log(_this.state.query);\n\n        if (_this.state.query) {\n          API.getResults(_this.state.query).then(function (res) {\n            if (res.data.hits.length > 0) {\n              console.log(res.data.hits[0].fields.item_name);\n              var newMatches = [];\n\n              for (var i = 0; i < 8; i++) {\n                var match = {\n                  name: res.data.hits[i].fields.item_name,\n                  id: res.data.hits[i]._id\n                };\n                newMatches.push(match);\n\n                _this.setState({\n                  matches: newMatches\n                });\n              }\n\n              console.log(_this.state.matches);\n            } else {}\n          });\n        }\n      });\n\n      if (event.keyCode === \"a\") {// this.handleFormSubmit(event)\n      }\n    };\n\n    _this.loadNutrition = function (query) {\n      API.getNutrition(query).then(function (res) {\n        console.log(res);\n\n        if (res) {\n          _this.setState({\n            searched: true,\n            name: res.data.item_name,\n            nutrition: res.data,\n            keto: {\n              fat: {\n                grams: res.data.nf_total_fat,\n                calories: res.data.nf_total_fat * 9\n              },\n              carbs: {\n                grams: res.data.nf_total_carbohydrate,\n                calories: res.data.nf_total_carbohydrate * 4\n              },\n              fiber: {\n                grams: res.data.nf_dietary_fiber,\n                calories: res.data.nf_dietary_fiber * 4\n              },\n              netCarbs: {\n                grams: res.data.nf_total_carbohydrate - res.data.nf_dietary_fiber,\n                calories: res.data.nf_total_carbohydrate * 4 - res.data.nf_dietary_fiber * 4\n              },\n              protein: {\n                grams: res.data.nf_protein,\n                calories: res.data.nf_protein * 4\n              }\n            }\n          });\n        }\n      }).then(function (res) {\n        _this.handleCalc();\n      });\n    };\n\n    _this.handleFormSubmit = function (event) {\n      var query;\n\n      if (_this.state.query) {\n        query = _this.state.query;\n\n        _this.loadNutrition(query);\n      } else {// query = \"eggs\"\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"content-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"search-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-query\",\n        placeholder: \"Begin Typing\",\n        onKeyPress: this.submitCheck,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"form-submit\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \"Search\"), this.state.matches.length > 0 ? React.createElement(\"div\", {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, this.state.matches.map(function (card) {\n        return React.createElement(Match, {\n          id: card.id,\n          name: card.name,\n          clicked: _this2.loadNutrition(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        });\n      })) : React.createElement(\"div\", {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })), this.state.searched ? React.createElement(\"section\", {\n        className: \"calc-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, this.state.name), React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Nutrient\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Grams\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Calories\")), React.createElement(\"tr\", {\n        className: \"fat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Fat: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.state.keto.fat.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, this.state.keto.fat.calories, \" calories\")), React.createElement(\"tr\", {\n        className: \"sub-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Total Carbs: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, this.state.keto.carbs.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, this.state.keto.carbs.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        className: \"sub-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Fiber: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.state.keto.fiber.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, this.state.keto.fiber.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Net Carbs: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, this.state.keto.netCarbs.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.state.keto.netCarbs.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Protein: \"), React.createElement(\"td\", {\n        className: \"grams\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, this.state.keto.protein.grams, \" grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, this.state.keto.protein.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"TOTAL: \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, this.state.total.grams, \"  grams\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, this.state.total.calories, \" calories\")), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"keto-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Protein: \", this.mathPercent(this.state.ratios.protein)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Carbs: \", this.mathPercent(this.state.ratios.carbs)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Fat: \", this.mathPercent(this.state.ratios.fat)))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;\n/*\n  2 options:\n    - form that allows you to enter nutrition info\n    - search field that permits you to search a nutrition facts API\n      -APIs:\n        - \n\n\n*/","map":{"version":3,"sources":["/Users/graphicdesign/Sites/apps/keto-calculator/src/App.js"],"names":["React","Component","API","Match","axios","App","state","searched","cards","query","matches","nutrition","name","calculators","calories","ratio","grams","keto","protein","carbs","fiber","netCarbs","fat","total","ratios","submitCheck","event","key","handleFormSubmit","mathPercent","num","parseFloat","mathRound","value","Math","round","handleCalc","setState","console","log","handleInputChange","target","res","getResults","then","data","hits","length","fields","item_name","newMatches","i","match","id","_id","push","keyCode","loadNutrition","getNutrition","nf_total_fat","nf_total_carbohydrate","nf_dietary_fiber","nf_protein","map","card"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n// import GameStart from './components/GameStart';\nimport API from './utils/API';\nimport Match from './Match';\nimport axios from \"axios\";\n\n\n\nclass App extends Component {\n  state = {\n    searched : false,\n    cards: [],\n    query: \"\",\n    matches: [],\n    nutrition: {},\n    name: \"\",\n    calculators : {\n      calories: (ratio,grams) => {return ratio*grams}\n    },\n    keto : {\n      protein: {\n        grams: 0,\n        calories: 0\n      },\n      carbs: {\n        grams: 0,\n        calories: 0\n      },\n      fiber: {\n        grams: 0,\n        calories: 0\n      },\n      netCarbs : {\n        grams: 0,\n        calories: 0\n      },\n      fat: {\n        grams: 0,\n        calories: 0\n      },\n    },\n    total: {\n      grams: () => {},\n      calories: 0\n    },\n    ratios: {\n      protein: 0,\n      carbs: 0,\n      fat: 0\n    }\n  };\n  submitCheck = event => {\n    if(event.key === \"Enter\"){\n        this.handleFormSubmit(event);\n    }\n  }\n  mathPercent = num => {\n    return parseFloat(num*100) + `%`;\n  }\n  mathRound = value => {\n    return Math.round((value) * 100) / 100\n  } \n  handleCalc = () => {\n    const nutrition = this.state.keto;\n    const protein = nutrition.protein.calories;\n    const fat = nutrition.fat.calories;\n    const carbs = nutrition.netCarbs.calories;\n    const total = fat + carbs + protein;\n    const ratios = {\n      fat: this.mathRound(fat/total),\n      carbs: this.mathRound(carbs/total),\n      protein: this.mathRound(protein/total)\n    }\n    this.setState({\n      ratios: ratios, \n      total: {\n        grams: this.mathRound(total),\n        calories: this.mathRound(protein/4 + fat/9 + carbs/4)\n    }});\n    console.log(ratios);\n\n\n  }\n  handleInputChange = event => {\n    this.setState({query : event.target.value}, res => {\n    console.log(this.state.query);\n    if(this.state.query){\n      API.getResults(this.state.query).then(res => {\n        if(res.data.hits.length > 0){\n          console.log(res.data.hits[0].fields.item_name);\n          const newMatches = [];\n          for(let i = 0; i < 8; i++){\n            const match = {\n              name: res.data.hits[i].fields.item_name,\n              id: res.data.hits[i]._id\n            }\n            newMatches.push(match);\n            this.setState({matches : newMatches});\n          }\n          console.log(this.state.matches);          \n\n        } else {\n        }\n      });\n    }\n    });\n    if(event.keyCode === \"a\"){\n        // this.handleFormSubmit(event)\n    }\n}\n\nloadNutrition = (query) => {\n  API.getNutrition(query).then( res => {\n    console.log(res);\n    if(res){\n      this.setState({\n        searched : true,\n        name: res.data.item_name,\n        nutrition: res.data,\n        keto: {\n          fat: {\n            grams: res.data.nf_total_fat,\n            calories: res.data.nf_total_fat*9\n          },\n          carbs: {\n            grams: res.data.nf_total_carbohydrate,\n            calories: res.data.nf_total_carbohydrate*4\n          },\n          fiber: {\n            grams: res.data.nf_dietary_fiber,\n            calories: res.data.nf_dietary_fiber*4\n          },\n          netCarbs : {\n            grams: res.data.nf_total_carbohydrate - res.data.nf_dietary_fiber,\n            calories: res.data.nf_total_carbohydrate*4 - res.data.nf_dietary_fiber*4\n          },\n          protein: {\n            grams: res.data.nf_protein,\n            calories: res.data.nf_protein*4\n          }\n        }\n      });\n    }\n\n  }).then( res => {\n    this.handleCalc();\n  });\n}\nhandleFormSubmit = event => {\n  let query;\n  if(this.state.query){\n    query = this.state.query;\n    this.loadNutrition(query);\n\n  } else {\n    // query = \"eggs\"\n  }\n  \n}\n\ncomponentDidMount(){\n\n}\n\n\n  render() {\n    return (\n      <div className=\"content-wrap\">\n      <section className=\"search-section\">\n        <input className=\"search-query\" placeholder=\"Begin Typing\" onKeyPress={this.submitCheck} onChange={this.handleInputChange}/>\n        <button className=\"form-submit\" onClick={this.handleFormSubmit}>Search</button>\n        {this.state.matches.length > 0 ? (\n        <div className=\"results\">\n          {this.state.matches.map(card => (\n          <Match \n            id = {card.id}\n            name = {card.name}\n            clicked = {this.loadNutrition()}\n          />\n          ))}\n        </div>\n        ) : (\n          <div className=\"results\">\n          </div>\n        )}\n\n      </section>\n      {this.state.searched ? (\n\n      <section className=\"calc-section\">\n      <h1>{this.state.name}</h1>\n        <table>\n          <tbody>\n            <tr>\n              <th>Nutrient</th>\n              <th>Grams</th>\n              <th>Calories</th>\n            </tr>\n          <tr className=\"fat\">\n            <td>Fat: </td>\n            <td className=\"grams\">{this.state.keto.fat.grams} grams</td>\n            <td>{this.state.keto.fat.calories} calories</td>\n            </tr>\n            <tr className=\"sub-row\">\n              <td>Total Carbs: </td>\n              <td className=\"grams\">{this.state.keto.carbs.grams} grams</td>\n              <td>{this.state.keto.carbs.calories} calories</td>\n            </tr>\n            <tr>\n              <td className=\"sub-row\">Fiber: </td>\n\n              <td className=\"grams\">{this.state.keto.fiber.grams} grams</td>\n              <td>{this.state.keto.fiber.calories} calories</td>\n            </tr>\n            <tr>\n            <td>Net Carbs: </td>\n\n              <td className=\"grams\">{this.state.keto.netCarbs.grams} grams</td>\n              <td>{this.state.keto.netCarbs.calories} calories</td>\n            </tr>\n            <tr>\n            <td>Protein: </td>\n\n              <td className=\"grams\">{this.state.keto.protein.grams} grams</td>\n              <td>{this.state.keto.protein.calories} calories</td>\n            </tr>\n            <tr>\n              <td>TOTAL: </td>\n              <td>{this.state.total.grams}  grams</td>\n              <td>{this.state.total.calories} calories</td>\n            </tr>\n            <tr>\n              <td>\n\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"keto-results\">\n          <div>Protein: {this.mathPercent(this.state.ratios.protein)}</div>\n          <div>Carbs: {this.mathPercent(this.state.ratios.carbs)}</div>\n          <div>Fat: {this.mathPercent(this.state.ratios.fat)}</div>\n        </div>\n\n        </section>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/*\n  2 options:\n    - form that allows you to enter nutrition info\n    - search field that permits you to search a nutrition facts API\n      -APIs:\n        - \n\n\n*/"]},"metadata":{},"sourceType":"module"}